#!/bin/bash

# TEXTMINING_LOG="$baseDIR/log/2.8"
# PMC=="$baseDIR/pmc/"
# PMC_PDF="$baseDIR/pmc/pdf"
# PMC_XML="$baseDIR/pmc/xml"
# MEDLINE="$baseDIR/medline"
# errLog=$TEXTMINING_LOG/err.log

SENDMAIL_HEADER="To:${VAR_IMPACT_EMAIL_LIST}\nFrom:VarImpact Pipeline<hui.li@mssm.edu>"
function reportsuccess {
	module purge # prevents 'sendmail: error while loading shared libraries: libz.so.1: '
	rm .weeklyruning.lock
	touch $TEXTMINING_LOG/.FINISHED_WEEKLY_UPDATE.txt
	echo -e "$SENDMAIL_HEADER\nSubject:Notification of successful completion of weekly run `date`\n\n \
 has completed successfully.\n\nThis in an automatic notification." | sendmail -t
	
}



source ../init.sh



# Clear previous log data

> $weeklyLog

#cd $DownloadFolder specify the folder 

if [ -e "$TEXTMINING_LOG/.weeklyruning.lock" ]; then
  echo "`date` -- Downloading PubMedCentral is still running ..." >> $weeklyLog
  exit
else
  touch .weeklyruning.lock # prevent weekly downloading  running independently
fi

#
echo "`date` -- Downloading PubMedCentral updates ..." >> $weeklyLog
#  -r -N -l inf --no-remove-listing
#  -r: Turn on recursive retrieving.
#  -N: Turn on time-stamping.
#  -l: depth inf
#
#  --no-remove-listing:
#           Don't remove the temporary .listing files generated by FTP retrievals.
#           Normally, these files contain the raw directory listings received from
#           FTP servers.  Not removing them can be useful for debugging purposes, or
#           when you want to be able to easily check on the contents of remote server
#           directories (e.g. to verify that a mirror you're running is complete).
# -P: specify the prefix for folder
#

wget --mirror --no-verbose  "ftp://ftp.ncbi.nlm.nih.gov/pub/pmc/" -P $PMC --directory-prefix=prefix $PMC>> $weeklyLog


cd $PMC_DIR
chgrp -f -R AILUN *
chmod -f -R u+rwX *
chmod -f -R g+rwX *

echo "`date` -- done with download and chgrp." >> $weeklyLog

# Database part: update pmc_filelist
mysql -h$DB -u$USER -p$PASS $SCHEMA < $script_DIR/sqlLoader_pmc_filelist.sql >> $weeklyLog
#copy all the gz files to xml




#  copy all the  xml to another folder.
find ./ -name *.gz  -print0| xargs -0 cp -t $PMC_XML/
#  copy all the pdfs  to another folder.
find ./ -name *.pdf -print0| xargs -0 cp -t $PMC_PDF/


reportsuccess

chmod --quiet -R g+w $PMC_XML
chmod --quiet -R g+w $PMC_PDF
